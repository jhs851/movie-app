{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","KOBIS_KEY","KOBIS_MOVIE_URI","TMDB_KEY","TMDB_SEARCH_URI","TMDB_POSTER_URI","state","getMovie","a","axios","get","querystring","stringify","key","movieCd","props","id","movieInfo","data","movieInfoResult","api_key","language","query","movieNm","year","moment","openDt","format","results","length","poster_path","parseInfo","movie","setState","title","subtitle","movieNmEn","openAt","status","prdtStatNm","audits","watchGradeNm","showTimes","showTm","nations","nationNm","directors","map","director","peopleNm","join","genres","genre","genreNm","distributor","companys","filter","company","companyPartNm","companyNm","poster","this","className","href","encodeURI","target","rel","src","alt","React","Component","App","KOBIS_BOX_OFFICE_URI","isLoading","movies","getMovies","yestersday","subtract","targetDt","repNationCd","dailyBoxOfficeList","boxOfficeResult","index","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2fd34cdc.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport querystring from \"querystring\";\nimport \"./Movie.css\";\n\nclass Movie extends React.Component {\n    KOBIS_KEY = 'cee131d2c40a9e5dcfbfe96eabc5aab9';\n\n    KOBIS_MOVIE_URI = '//www.kobis.or.kr/kobisopenapi/webservice/rest/movie/searchMovieInfo.json';\n\n    TMDB_KEY = '426d65cfa3cf702b8ab8816512b9931a';\n\n    TMDB_SEARCH_URI = '//api.themoviedb.org/3/search/movie';\n\n    TMDB_POSTER_URI = '//image.tmdb.org/t/p/w185_and_h278_bestv2';\n\n    state = {};\n\n    getMovie = async () => {\n        const {\n            data: {\n                movieInfoResult: { movieInfo }\n            }\n        } = await axios.get(\n            `${this.KOBIS_MOVIE_URI}?${querystring.stringify({\n                key: this.KOBIS_KEY,\n                movieCd: this.props.id\n            })}`\n        );\n\n        const { data: { results } } = await axios.get(\n            `${this.TMDB_SEARCH_URI}?${querystring.stringify({\n                api_key: this.TMDB_KEY,\n                language: 'ko-KR',\n                query: movieInfo.movieNm,\n                year: moment(movieInfo.openDt).format('YYYY')\n            })}`\n        );\n\n        movieInfo['poster'] = results.length\n            ? this.TMDB_POSTER_URI + results[0].poster_path\n            : `//via.placeholder.com/185x278/000000?text=Not found Poster`;\n\n        this.parseInfo(movieInfo);\n    };\n\n    parseInfo = (movie) => {\n        this.setState({\n            title: movie.movieNm,\n            subtitle: movie.movieNmEn,\n            openAt: moment(movie.openDt).format('YYYY-MM-DD'),\n            status: movie.prdtStatNm,\n            audits: movie.audits[0].watchGradeNm,\n            showTimes: `${movie.showTm}분`,\n            nations: movie.nations[0].nationNm,\n            directors: movie.directors.map(director => director.peopleNm).join(' / '),\n            genres: movie.genres.map(genre => genre.genreNm).join('/'),\n            distributor: movie.companys.filter(company => company.companyPartNm === '배급사').map(company => company.companyNm).join(', '),\n            poster: movie.poster\n        });\n    };\n\n    componentDidMount() {\n        this.getMovie();\n    }\n\n    render() {\n        return (\n            <a className=\"movie\" href={`https://search.naver.com/search.naver?${encodeURI(`sm=top_hty&fbm=1&ie=utf8&query=${this.state.title}`)}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src={this.state.poster} alt={this.state.title} />\n\n                <div className=\"movie__data\">\n                    <div className=\"movie__header\">\n                        <h4 className=\"movie__title\">{this.state.title}</h4>\n                        <h5 className=\"movie__subtitle\">{this.state.subtitle}</h5>\n                    </div>\n\n                    <div className=\"movie__info\">\n                        <p className=\"movie__openat\">\n                            <span>개봉일</span> {this.state.openAt}\n                        </p>\n\n                        <p className=\"movie__status\">\n                            <span>제작상태</span> {this.state.status}\n                        </p>\n                    </div>\n\n                    <div className=\"movie__info\">\n                        <p className=\"movie__audits\">\n                            <span>관람등급</span> {this.state.audits}\n                        </p>\n\n                        <p className=\"movie__showtimes\">\n                            <span>상영시간</span> {this.state.showTimes}\n                        </p>\n\n                        <p className=\"movie__nations\">\n                            <span>제작국가</span> {this.state.nations}\n                        </p>\n                    </div>\n\n                    <div className=\"movie__info\">\n                        <p className=\"movie__directors\">\n                            <span>감독</span> {this.state.directors}\n                        </p>\n\n                        <p className=\"movie__genres\">\n                            <span>장르</span> {this.state.genres}\n                        </p>\n\n                        <p className=\"movie__distributor\">\n                            <span>배급사</span> {this.state.distributor}\n                        </p>\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nMovie.propTypes = {\n    id: PropTypes.string.isRequired\n};\n\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport moment from \"moment\";\nimport querystring from \"querystring\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n    KOBIS_KEY = 'cee131d2c40a9e5dcfbfe96eabc5aab9';\n\n    KOBIS_BOX_OFFICE_URI = '//www.kobis.or.kr/kobisopenapi/webservice/rest/boxoffice/searchDailyBoxOfficeList.json';\n\n    state = {\n        isLoading: true,\n        movies: []\n    };\n\n    getMovies = async () => {\n        const yestersday = moment().subtract(1, 'days').format('YYYYMMDD');\n\n        const {\n            data: {\n                boxOfficeResult: { dailyBoxOfficeList }\n            }\n        } = await axios.get(\n            `${this.KOBIS_BOX_OFFICE_URI}?${querystring.stringify({ \n                key: this.KOBIS_KEY,\n                targetDt: yestersday,\n                repNationCd: 'K'\n            })}`\n        );\n\n        this.setState({\n            movies: dailyBoxOfficeList,\n            isLoading: false\n        })\n    };\n\n    componentDidMount() {\n        this.getMovies();\n    }\n\n    render() {\n        const { isLoading, movies } = this.state;\n\n        return (\n            <section className=\"container\">\n                {isLoading\n                    ? (\n                        <div className=\"loader\">\n                            <span className=\"loader__text\">Loading...</span>\n                        </div>\n                    )\n                    : (\n                        <div className=\"movies\">\n                            {movies.map((movie, index) =>\n                                <Movie key={index} id={movie.movieCd} />\n                            )}\n                        </div>\n                    )\n                }\n            </section>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}